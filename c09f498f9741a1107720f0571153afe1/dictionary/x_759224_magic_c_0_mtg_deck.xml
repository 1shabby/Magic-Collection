<?xml version="1.0" encoding="UTF-8"?><database>
    <element db_object_id="1fc12327c33ee6500efafbfdd4013180" label="MTG Deck" max_length="40" name="x_759224_magic_c_0_mtg_deck" type="collection">
        <element calculation="(function calculatedFieldValue(current) {&#10;&#10;&#9;// Add your code here&#10;&#9;var colors = '';&#10;&#9;var deckCardGR = new GlideRecord('x_759224_magic_c_0_deck_card');&#10;&#9;deckCardGR.addQuery('deck',current.sys_id);&#10;&#9;deckCardGR.addQuery('is_commander',true);&#10;&#9;deckCardGR.query();&#10;&#9;while(deckCardGR.next()){&#10;&#9;&#9;var card = deckCardGR.card.getRefRecord();&#10;&#9;&#9;if(colors != ''){&#10;&#9;&#9;&#9;colors += ',' + card.colors;&#10;&#9;&#9;}else{&#10;&#9;&#9;colors += card.colors;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;return colors;  // return the calculated value&#10;&#10;})(current);" label="Color Identity" max_length="4000" name="color_identity" read_only="true" type="glide_list" virtual="true"/>
        <element label="Deck Import" max_length="32" name="deck_import" read_only="true" reference="x_759224_magic_c_0_deck_imports" type="reference"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;// Add your code here&#13;&#10;&#9;var deckCardGR = new GlideRecord('x_759224_magic_c_0_deck_card');&#13;&#10;&#9;deckCardGR.addQuery('deck',current.getUniqueValue());&#13;&#10;&#9;deckCardGR.addQuery('is_maybeboard','false');&#13;&#10;&#9;deckCardGR.query();&#13;&#10;&#9;var sum = 0;&#13;&#10;&#9;while(deckCardGR.next()){&#13;&#10;&#9;&#9;sum += deckCardGR.quantity;&#13;&#10;&#9;}&#13;&#10;&#9;return sum;  // return the calculated value&#13;&#10;&#13;&#10;})(current);" label="Cards" max_length="3" name="cards" read_only="true" type="integer" virtual="true"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;// Add your code here&#13;&#10;&#9;var sum = 0;&#13;&#10;&#9;var cards = 0;&#13;&#10;&#9;var deckCardGR = new GlideRecord('x_759224_magic_c_0_deck_card');&#13;&#10;&#9;deckCardGR.addQuery('deck',current.getUniqueValue());&#13;&#10;&#9;deckCardGR.addQuery('is_maybeboard','false');&#13;&#10;&#9;deckCardGR.query();&#13;&#10;&#13;&#10;&#9;while(deckCardGR.next()){&#13;&#10;&#9;&#9;var cardGR = new GlideRecord('x_759224_magic_c_0_mtg_cards');&#13;&#10;&#9;&#9;cardGR.get('sys_id',deckCardGR.getValue('card'));&#13;&#10;&#13;&#10;&#9;&#9;sum += (deckCardGR.getValue('quantity') * parseFloat(cardGR.getValue('cmc')));&#13;&#10;&#9;&#9;cards += deckCardGR.getValue('quantity');&#13;&#10;&#9;}&#13;&#10;&#9;var cmc = sum /cards;&#13;&#10;&#9;return Number(cmc.toFixed(2));  // return the calculated value&#13;&#10;&#13;&#10;})(current);" label="CMC" max_length="40" name="cmc" read_only="true" type="string" virtual="true"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;// Add your code here&#13;&#10;&#9;return '';  // return the calculated value&#13;&#10;&#13;&#10;})(current);" label="Author" max_length="4000" name="author" reference="sys_user" reference_qual="sys_class_name=x_759224_magic_c_0_magic_users^EQ" reference_qual_condition="sys_class_name=x_759224_magic_c_0_magic_users^EQ" type="glide_list"/>
        <element label="Bracket" max_length="1" name="bracket" type="integer"/>
        <element label="Public" max_length="40" name="public" type="boolean"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;// Add your code here&#13;&#10;&#9;return '';  // return the calculated value&#13;&#10;&#13;&#10;})(current);" label="Companion" max_length="40" name="has_companion" type="boolean"/>
        <element label="Description" max_length="4000" name="description" type="html"/>
        <element display="true" label="Name" mandatory="true" max_length="100" name="name" type="string"/>
        <element label="Legal" max_length="40" name="legal" read_only="true" type="boolean"/>
        <element choice="1" label="Format" max_length="40" name="format" reference="x_759224_magic_c_0_deck_formats" type="reference">
            <choice/>
        </element>
        <index name="index">
            <element name="deck_import"/>
        </index>
        <index name="index2">
            <element name="format"/>
        </index>
    </element>
</database>
