<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $sce, mtgCards) {
    $scope.isFlipped = false;
    $scope.legalFormats = [];
    $scope.illegalFormats = [];

    function formatLegalityLists() {
        if (!$scope.card || !$scope.card.legality) return;

        let legality = $scope.card.legality;

        // Reset arrays
        $scope.legalFormats = [];
        $scope.illegalFormats = [];

        for (let format in legality) {
            if (legality.hasOwnProperty(format)) {
                // Format the string: replace underscores and capitalize first letter
                let formatted = format.replace(/_/g, ' ');
                formatted = formatted.charAt(0).toUpperCase() + formatted.slice(1);

                if (legality[format]) {
                    $scope.legalFormats.push(formatted);
                } else {
                    $scope.illegalFormats.push(formatted);
                }
            }
        }
    }

    $scope.flipCard = function() {
        $scope.isFlipped = !$scope.isFlipped;
        $scope.updateCurrentFace();
    };

    $scope.updateCurrentFace = function() {
        $scope.currentFace = $scope.isFlipped ? $scope.card.face_two : $scope.card.face_one;
		$scope.name = $scope.currentFace.name;
		$scope.flavorName = $scope.currentFace.flavor_name;
		$scope.colors = $scope.currentFace.colors;
		$scope.power = $scope.currentFace.power;
		$scope.toughness = $scope.currentFace.toughness;
		$scope.flavorText = $scope.currentFace.flavor_text;
		$scope.loyalty = $scope.currentFace.loyalty;
		$scope.artist = $scope.currentFace.artist;
		$scope.typeLine = $scope.currentFace.type_line;
		// Fields with HTML
        $scope.trustedOracleText = $sce.trustAsHtml($scope.currentFace.oracle_text);
        $scope.trustedManaCost = $sce.trustAsHtml($scope.currentFace.mana_cost);
    };

    $scope.getCard = function() {
        const card = mtgCards.getCard();
        if (card) {
            $scope.card = card;
			$scope.isFlipped = false;

            // Trust the oracle text HTML
            formatLegalityLists();
			$scope.updateCurrentFace();
        }
    };

    mtgCards.onChange(function(updatedCard) {
        $scope.$evalAsync(function() {
            $scope.card = updatedCard;
			$scope.isFlipped = false;
            formatLegalityLists();
			$scope.updateCurrentFace();
        });
    });

    // Initial load (optional)
    $scope.getCard();
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.card-modal-content {&#13;
  display: flex;&#13;
  flex-wrap: wrap;&#13;
  gap: 20px;&#13;
  max-width: 70vw;&#13;
  margin: auto;&#13;
  padding: 2rem;&#13;
  color: $brand-tertiary;&#13;
  background: $brand-primary;&#13;
  border-radius: 5px;&#13;
}&#13;
.left-col {&#13;
  flex: 1.3; &#13;
  text-align: center;&#13;
  display: flex;&#13;
  flex-direction: column;&#13;
  align-items: center; &#13;
  font-size:2rem;&#13;
  font-weight:450;&#13;
}&#13;
.left-col strong {&#13;
  font-weight: 700;&#13;
  font-size: 2.2rem;&#13;
  color:$brand-secondary;&#13;
}&#13;
.flip-card-wrapper{&#13;
  width:35rem;&#13;
  margin:2rem;&#13;
}&#13;
.card-name{&#13;
  font-weight: 700;&#13;
}&#13;
.flipBtn&#13;
.flip-card-wrapper {&#13;
  flex-grow: 1;&#13;
  max-width: 100%;&#13;
  width: 100%;&#13;
  perspective: 1000px;&#13;
  margin: 0 auto;&#13;
}&#13;
.flip-card {&#13;
  width: 100%;&#13;
  position: relative;&#13;
}&#13;
.flip-card-inner {&#13;
  position: relative;&#13;
  width: 100%;&#13;
  padding-top: 135%;&#13;
  transition: transform 0.8s;&#13;
  transform-style: preserve-3d;&#13;
}&#13;
.flip-card.flipped .flip-card-inner {&#13;
  transform: rotateY(180deg);&#13;
}&#13;
.flip-card-front, .flip-card-back {&#13;
  position: absolute;&#13;
  top: 0;&#13;
  left: 0;&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  border-radius: 4%;&#13;
  backface-visibility: hidden;&#13;
  display: flex;&#13;
  align-items: center;&#13;
  justify-content: center;&#13;
  background: #000;&#13;
}&#13;
.flip-card-back {&#13;
  transform: rotateY(180deg);&#13;
}&#13;
.flip-card-front img, .flip-card-back img {&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  border-radius: 4%;&#13;
  display: block;&#13;
}&#13;
.card-img-container {&#13;
  position: relative;&#13;
  width: 100%&#13;
    height: 100%;&#13;
}&#13;
.foil-overlay {&#13;
  position: absolute;&#13;
  top: 0;&#13;
  left: 0;&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  pointer-events: none;&#13;
  border-radius: 4%;&#13;
  z-index: 2;&#13;
  display: block;&#13;
}&#13;
.icon-links img {&#13;
  width: 32px;&#13;
  height: 32px;&#13;
  margin: 4px;&#13;
  cursor: pointer;&#13;
}&#13;
.info-col {&#13;
  font-size: 2rem;&#13;
  line-height: 1.6;&#13;
  font-weight: 450;&#13;
  color: $brand-tertiary;&#13;
}&#13;
.info-col strong {&#13;
  font-weight: 700;&#13;
  font-size: 2.2rem;&#13;
  color:$brand-secondary;&#13;
}&#13;
#cardName {&#13;
  font-weight: 900;&#13;
  font-size: 1.8rem;&#13;
  margin-bottom: 12px;&#13;
  color: #fff;&#13;
}&#13;
#flipBtn {&#13;
  margin-top: 10px;&#13;
  padding: 6px 10px;&#13;
  background-color: $brand-secondary;&#13;
  color: black;&#13;
  border: none;&#13;
  border-radius: 5px;&#13;
  cursor: pointer;&#13;
}&#13;
@media (max-width: 768px) {&#13;
  .card-modal-content {&#13;
    flex-direction: column !important;&#13;
    align-items: center;&#13;
  }&#13;
  .flip-card-wrapper {&#13;
    max-width: 90%;&#13;
    min-width: 300px;&#13;
  }&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>mtg-card-modal</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>MTG Card Modal</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-09-19 19:57:05</sys_created_on>
        <sys_id>f95b201ac3c032100efafbfdd4013186</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>MTG Card Modal</sys_name>
        <sys_package display_value="Magic Collection" source="x_759224_magic_c_0">c09f498f9741a1107720f0571153afe1</sys_package>
        <sys_policy/>
        <sys_scope display_value="Magic Collection">c09f498f9741a1107720f0571153afe1</sys_scope>
        <sys_update_name>sp_widget_f95b201ac3c032100efafbfdd4013186</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-09-23 16:46:02</sys_updated_on>
        <template><![CDATA[<div>
  <div class="card-modal-content" ng-if="card">
    <!-- Left Column -->
    <div class="left-col">
      <div class="flip-card-wrapper">
        <div class="flip-card" ng-class="{flipped: isFlipped}">
          <div class="flip-card-inner">
            <!-- Front -->
            <div class="flip-card-front">
              <div class="card-img-container">
                <img ng-src="{{ card.face_one.image }}" alt="Card Front" />
                <img class="foil-overlay" ng-if="card.flags.is_foil" src="x_759224_magic_c_0.foil.png" alt="Foil Overlay" />
              </div>
            </div>

            <!-- Back -->
            <div class="flip-card-back">
              <div class="card-img-container">
                <img ng-src="{{ card.face_two.image }}" alt="Card Back" />
              </div>
            </div>
          </div>
        </div>
      </div>

      <button ng-if="card.flags.is_multifaced" id="flipBtn" ng-click="flipCard()">Flip Card</button>

      <div style="margin-top: 10px;">
        <strong>Price:</strong><br> ${{ card.price || 'N/A' }}
      </div>

      <div ng-if="card.links" class="icon-links" style="display: flex; justify-content: center; flex-wrap: wrap; margin-top: 8px;">
        <a ng-if="card.links.tcgplayer" ng-href="{{ card.links.tcgplayer }}" target="_blank"><img src="x_759224_magic_c_0.icon_tcgplayer.png" title="TCGPlayer" alt="TCGPlayer" /></a>
        <a ng-if="card.links.cardmarket" ng-href="{{ card.links.cardmarket }}" target="_blank"><img src="x_759224_magic_c_0.icon_cardmarket.png" title="Cardmarket" alt="Cardmarket" /></a>
        <a ng-if="card.links.cardhoarder" ng-href="{{ card.links.cardhoarder }}" target="_blank"><img src="x_759224_magic_c_0.icon_cardhoarder.png" title="Cardhoarder" alt="Cardhoarder" /></a>
        <a ng-if="card.links.edhrec" ng-href="{{ card.links.edhrec }}" target="_blank"><img src="x_759224_magic_c_0.icon_edhrec.png" title="EDHREC" alt="EDHREC" /></a>
      </div>
    </div>

    <!-- Right Column -->
    <div class="info-col" style="flex: 2.5;">
      <h2 class="card-name">{{ flavorName || name || card.name }}</h2>

      <div style="display: flex; gap: 20px; margin-bottom: 8px;" ng-if="trustedManaCost || typeLine">
        <div ng-if="card.face_one.mana_cost || (isFlipped && card.face_two.mana_cost)">
          <strong>Mana Cost:</strong><br>
          <span ng-bind-html="trustedManaCost"></span>
        </div>

        <div ng-if="typeLine"><strong>Type:</strong><br> {{ typeLine }}</div>
      </div>

      <div style="display: flex; gap: 20px; margin-bottom: 8px;" ng-if="colors || power || toughness || loyalty">
        <div ng-if="colors"><strong>Colors:</strong><br> {{ colors }}</div>
        <div ng-if="loyalty"><strong>Loyalty:</strong><br> {{ loyalty }}</div>
        <div ng-if="power || toughness">
          <strong>Power/Toughness:</strong><br> {{ power || '–' }} / {{ toughness || '–' }}
        </div>
      </div>

      <div ng-if="trustedOracleText" style="margin-bottom: 10px;">
        <strong>Oracle Text:</strong><br><span ng-bind-html="trustedOracleText"></span>
      </div>

      <div ng-if="flavorText" style="font-style: italic; margin-bottom: 12px;">
        <strong>Flavor Text:</strong><br><em>{{ flavorText }}</em>
      </div>

      <div ng-if="card.sets" style="margin-bottom: 8px;">
        <strong>Set:</strong><br> {{ card.sets }}
      </div>

      <div style="display: flex; gap: 20px; margin-bottom: 12px;" ng-if="card.cn || card.face_one.artist">
        <div ng-if="card.cn"><strong>Number:</strong><br><em>{{ card.cn }}</em></div>
        <div ng-if="artist"><strong>Artist:</strong><br><em>{{ artist }}</em></div>
      </div>

      <hr style="border: none; border-top: 1px solid #555; margin: 20px 0;">

      <div style="flex: 1;">
        <div>
          <strong>Legal In:</strong><br>
          <span>{{ legalFormats.join(', ') }}</span>
        </div>

        <div style="margin-top: 10px;">
          <strong>Not Legal In:</strong><br>
          <span>{{ illegalFormats.join(', ') }}</span>
        </div>
      </div>

    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
